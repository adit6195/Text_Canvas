import 'dart:math';
import 'package:flutter/material.dart';
import 'package:google_fonts/google_fonts.dart';
import 'package:flutter_colorpicker/flutter_colorpicker.dart';

class TextProperties {
  final String text;
  final double fontSize;
  final Color color;
  final String fontfamily;
  final Offset position;

  TextProperties({
    required this.text,
    required this.fontSize,
    required this.color,
    required this.fontfamily,
    required this.position,
  });
}

class MyWidget extends StatefulWidget {
  final TextProperties textProperties;

  const MyWidget({Key? key, required this.textProperties}) : super(key: key);

  @override
  _MyWidgetState createState() => _MyWidgetState();
}

class _MyWidgetState extends State<MyWidget> {
  late double _left;
  late double _top;

  @override
  void initState() {
    super.initState();
    // Initialize the position based on the widget's properties
    _left = widget.textProperties.position.dx;
    _top = widget.textProperties.position.dy;
  }

  @override
  Widget build(BuildContext context) {
    return Positioned(
      top: _top,
      left: _left,
      child: GestureDetector(
        onPanUpdate: (details) {
          setState(() {
            _left = max(0, _left + details.delta.dx);
            _top = max(0, _top + details.delta.dy);
          });
        },
        onTap: () {
          // Handle onTap for individual widget
          loadValue(widget.textProperties);
          // Other onTap logic for the specific widget
        },
        child: Text(
          widget.textProperties.text,
          style: GoogleFonts.getFont(
            widget.textProperties.fontfamily,
          ).copyWith(color: widget.textProperties.color, fontSize: widget.textProperties.fontSize),
        ),
      ),
    );
  }

  void loadValue(TextProperties item) {
    // Placeholder for your loadValue logic
  }
}

class CanvasScreen extends StatefulWidget {
  const CanvasScreen({super.key});

  @override
  State<CanvasScreen> createState() => _CanvasScreenState();
}

class _CanvasScreenState extends State<CanvasScreen> {
  final List<TextProperties> textList = [];
  List<String> fontFamilyList = [
    "Lato",
    "Montserrat",
    "Lobster",
    "Pacifico",
    "Spectral SC",
    "Dancing Script",
    "Oswald",
    "Bangers",
    "Turret Road",
    "Anton"
  ];

  bool activeItem = false;
  String selectedFont = 'Lato';
  TextEditingController _textcontroller = TextEditingController();
  TextEditingController _sizecontroler = TextEditingController();
  double currentSize = 16;
  String currentText = "";
  Color currentColor = Colors.black;
  Color pickerColor = Colors.black;
  late double _left;
  late double _top;

  @override
  Widget build(BuildContext context) {
    void changeColor(Color color) {
      setState(() {
        currentColor = color;
      });
    }

    return Scaffold(
      backgroundColor: Colors.grey[800],
      body: Stack(
        children: [
          Positioned(
            top: 55,
            left: 29.5,
            child: Container(
              height: 500,
              width: 300,
              decoration: const BoxDecoration(
                color: Colors.white,
                borderRadius: BorderRadius.all(Radius.circular(20)),
              ),
              child: Stack(
                children: [
                  ...textList.map((e) => MyWidget(textProperties: e)).toList(),
                ],
              ),
            ),
          ),
          Positioned(
            bottom: 181,
            child: Container(
              height: 50,
              width: MediaQuery.of(context).size.width,
              decoration: const BoxDecoration(
                color: Colors.black,
                border: Border(
                  top: BorderSide(color: Colors.white),
                ),
              ),
              child: Padding(
                padding: const EdgeInsets.only(left: 8, right: 8),
                child: SingleChildScrollView(
                  scrollDirection: Axis.horizontal,
                  child: Row(
                    children: [
                      // ... Same as before ...
                    ],
                  ),
                ),
              ),
            ),
          ),
          Positioned(
            bottom: 0,
            child: Container(
              decoration: const BoxDecoration(
                color: Colors.black,
                border: Border(
                  top: BorderSide(color: Colors.white),
                ),
              ),
              width: MediaQuery.of(context).size.width,
              height: 180,
              child: Column(
                children: [
                  Padding(
                    padding: const EdgeInsets.only(
                      left: 10,
                      right: 10,
                      top: 20,
                      bottom: 15,
                    ),
                    child: Row(
                      mainAxisAlignment: MainAxisAlignment.spaceEvenly,
                      children: [
                        SizedBox(
                          width: 200,
                          child: TextField(
                            onChanged: (value) {
                              currentText = value;
                            },
                            style: const TextStyle(color: Colors.white),
                            controller: _textcontroller,
                            decoration: InputDecoration(
                              labelStyle: const TextStyle(
                                color: Colors.white,
                              ),
                              labelText: "Enter you text",
                              border: OutlineInputBorder(
                                borderRadius: BorderRadius.circular(15),
                              ),
                              enabledBorder: const OutlineInputBorder(
                                borderSide: BorderSide(
                                  color: Colors.white,
                                ),
                              ),
                              focusedBorder: const OutlineInputBorder(
                                borderSide: BorderSide(
                                  color: Colors.white,
                                ),
                              ),
                            ),
                          ),
                        ),
                        Container(
                          decoration: BoxDecoration(
                              border: Border.all(color: Colors.white)),
                          child: Padding(
                            padding: const EdgeInsets.all(8.0),
                            child: Row(
                              children: [
                                const Text(
                                  "Size :",
                                  style: TextStyle(
                                      color: Colors.white, fontSize: 18),
                                ),
                                const SizedBox(
                                  width: 10,
                                ),
                                SizedBox(
                                  height: 45,
                                  width: 45,
                                  child: TextField(
                                    onChanged: (
